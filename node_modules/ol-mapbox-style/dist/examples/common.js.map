{"version":3,"file":"common.js","mappings":"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","sources":["webpack://ol-mapbox-style/webpack/runtime/chunk loaded","webpack://ol-mapbox-style/./node_modules/@mapbox/unitbezier/index.js","webpack://ol-mapbox-style/./node_modules/csscolorparser/csscolorparser.js","webpack://ol-mapbox-style/./node_modules/ieee754/index.js","webpack://ol-mapbox-style/./node_modules/mapbox-to-css-font/index.js","webpack://ol-mapbox-style/./node_modules/nanoassert/index.js","webpack://ol-mapbox-style/./node_modules/pbf/index.js","webpack://ol-mapbox-style/./node_modules/rbush/rbush.min.js","webpack://ol-mapbox-style/./node_modules/ol/AssertionError.js","webpack://ol-mapbox-style/./node_modules/ol/Collection.js","webpack://ol-mapbox-style/./node_modules/ol/CollectionEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Disposable.js","webpack://ol-mapbox-style/./node_modules/ol/Image.js","webpack://ol-mapbox-style/./node_modules/ol/ImageState.js","webpack://ol-mapbox-style/./node_modules/ol/ImageTile.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Map.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Composite.js","webpack://ol-mapbox-style/./node_modules/ol/MapEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventType.js","webpack://ol-mapbox-style/./node_modules/ol/pointer/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol-mapbox-style/./node_modules/ol/MapEventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapProperty.js","webpack://ol-mapbox-style/./node_modules/ol/control/Control.js","webpack://ol-mapbox-style/./node_modules/ol/control/Attribution.js","webpack://ol-mapbox-style/./node_modules/ol/control/Rotate.js","webpack://ol-mapbox-style/./node_modules/ol/control/Zoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Property.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Interaction.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Pointer.js","webpack://ol-mapbox-style/./node_modules/ol/events/condition.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragRotate.js","webpack://ol-mapbox-style/./node_modules/ol/render/Box.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragBox.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol-mapbox-style/./node_modules/ol/events/KeyCode.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Kinetic.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchRotate.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Map.js","webpack://ol-mapbox-style/./node_modules/ol/control/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/Object.js","webpack://ol-mapbox-style/./node_modules/ol/ObjectEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Observable.js","webpack://ol-mapbox-style/./node_modules/ol/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/PriorityQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileRange.js","webpack://ol-mapbox-style/./node_modules/ol/TileState.js","webpack://ol-mapbox-style/./node_modules/ol/ViewProperty.js","webpack://ol-mapbox-style/./node_modules/ol/centerconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/resolutionconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/View.js","webpack://ol-mapbox-style/./node_modules/ol/ViewHint.js","webpack://ol-mapbox-style/./node_modules/ol/array.js","webpack://ol-mapbox-style/./node_modules/ol/asserts.js","webpack://ol-mapbox-style/./node_modules/ol/color.js","webpack://ol-mapbox-style/./node_modules/ol/colorlike.js","webpack://ol-mapbox-style/./node_modules/ol/console.js","webpack://ol-mapbox-style/./node_modules/ol/coordinate.js","webpack://ol-mapbox-style/./node_modules/ol/css.js","webpack://ol-mapbox-style/./node_modules/ol/dom.js","webpack://ol-mapbox-style/./node_modules/ol/easing.js","webpack://ol-mapbox-style/./node_modules/ol/events.js","webpack://ol-mapbox-style/./node_modules/ol/events/Event.js","webpack://ol-mapbox-style/./node_modules/ol/events/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/events/Target.js","webpack://ol-mapbox-style/./node_modules/ol/extent.js","webpack://ol-mapbox-style/./node_modules/ol/extent/Relationship.js","webpack://ol-mapbox-style/./node_modules/ol/featureloader.js","webpack://ol-mapbox-style/./node_modules/ol/format/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/geom/GeometryCollection.js","webpack://ol-mapbox-style/./node_modules/ol/format/JSONFeature.js","webpack://ol-mapbox-style/./node_modules/ol/format/GeoJSON.js","webpack://ol-mapbox-style/./node_modules/ol/functions.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Geometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiLineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPolygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Point.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LinearRing.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Polygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/area.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/center.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/closest.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/contains.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/deflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/inflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interpolate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/length.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/reverse.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/orient.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/segments.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/simplify.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/transform.js","webpack://ol-mapbox-style/./node_modules/ol/has.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Base.js","webpack://ol-mapbox-style/./node_modules/ol/style/flat.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseVector.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Group.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Property.js","webpack://ol-mapbox-style/./node_modules/ol/layer/TileProperty.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/loadingstrategy.js","webpack://ol-mapbox-style/./node_modules/ol/math.js","webpack://ol-mapbox-style/./node_modules/ol/obj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg3857.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg4326.js","webpack://ol-mapbox-style/./node_modules/ol/proj/projections.js","webpack://ol-mapbox-style/./node_modules/ol/proj/transforms.js","webpack://ol-mapbox-style/./node_modules/ol/sphere.js","webpack://ol-mapbox-style/./node_modules/ol/proj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Projection.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Units.js","webpack://ol-mapbox-style/./node_modules/ol/render/Event.js","webpack://ol-mapbox-style/./node_modules/ol/render/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/render/VectorContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/linechunk.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/vector.js","webpack://ol-mapbox-style/./node_modules/ol/reproj.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Triangulation.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/common.js","webpack://ol-mapbox-style/./node_modules/ol/rotationconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/size.js","webpack://ol-mapbox-style/./node_modules/ol/source/Source.js","webpack://ol-mapbox-style/./node_modules/ol/structs/RBush.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/style/Circle.js","webpack://ol-mapbox-style/./node_modules/ol/style/Fill.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImage.js","webpack://ol-mapbox-style/./node_modules/ol/style/Icon.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImageCache.js","webpack://ol-mapbox-style/./node_modules/ol/style/Image.js","webpack://ol-mapbox-style/./node_modules/ol/style/RegularShape.js","webpack://ol-mapbox-style/./node_modules/ol/style/Stroke.js","webpack://ol-mapbox-style/./node_modules/ol/style/Style.js","webpack://ol-mapbox-style/./node_modules/ol/style/Text.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/common.js","webpack://ol-mapbox-style/./node_modules/ol/transform.js","webpack://ol-mapbox-style/./node_modules/ol/util.js","webpack://ol-mapbox-style/./node_modules/ol/render/Feature.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/convert.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/extend.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/scope.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/formatted.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/resolved_image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/values.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/literal.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/runtime_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/assertion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coercion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/evaluation_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/compound_expression.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/within.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/is_constant.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/var.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/stops.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/step.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color_spaces.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coalesce.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/let.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/at.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/in.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index_of.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/match.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/case.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/slice.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/comparison.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/number_format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/length.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/result.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/get_type.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/unbundle_jsonlint.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/reference/latest.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/feature_filter/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/ref_properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/deref.js","webpack://ol-mapbox-style/./node_modules/ol/tilecoord.js","webpack://ol-mapbox-style/./node_modules/ol/tileurlfunction.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseImage.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Image.js","webpack://ol-mapbox-style/./node_modules/ol/format/MVT.js","webpack://ol-mapbox-style/./node_modules/ol/ImageBase.js","webpack://ol-mapbox-style/./node_modules/ol/ImageCanvas.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/Image.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseTile.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/LRUCache.js","webpack://ol-mapbox-style/./node_modules/ol/TileCache.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid.js","webpack://ol-mapbox-style/./node_modules/ol/source/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/source/Raster.js","webpack://ol-mapbox-style/./node_modules/ol/source/UrlTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileImage.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileJSON.js","webpack://ol-mapbox-style/./node_modules/ol/net.js","webpack://ol-mapbox-style/./node_modules/ol/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/VectorRenderTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorTile.js","webpack://ol-mapbox-style/./src/shaders.js","webpack://ol-mapbox-style/./src/mapbox.js","webpack://ol-mapbox-style/./src/apply.js","webpack://ol-mapbox-style/./src/util.js","webpack://ol-mapbox-style/./src/text.js","webpack://ol-mapbox-style/./src/stylefunction.js","webpack://ol-mapbox-style/webpack/bootstrap","webpack://ol-mapbox-style/webpack/runtime/define property getters","webpack://ol-mapbox-style/webpack/runtime/hasOwnProperty shorthand","webpack://ol-mapbox-style/webpack/runtime/make namespace object","webpack://ol-mapbox-style/webpack/runtime/jsonp chunk loading"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 100,\n  'extra-light': 100,\n  light: 200,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  heavy: 800,\n  black: 800,\n  'extra-bold': 800,\n  'ultra-black': 900,\n  'extra-black': 900,\n  'ultra-bold': 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n","module.exports = assert\n\nclass AssertionError extends Error {}\nAssertionError.prototype.name = 'AssertionError'\n\n/**\n * Minimal assert function\n * @param  {any} t Value to check if falsy\n * @param  {string=} m Optional assertion error message\n * @throws {AssertionError}\n */\nfunction assert (t, m) {\n  if (!t) {\n    var err = new AssertionError(m)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, assert)\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateAndExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateAndExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n  let i;\n  if (direction > 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n  } else if (direction < 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n  } else {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] == target) {\n        return i;\n      } else if (arr[i] < target) {\n        if (typeof direction === 'function') {\n          if (direction(target, arr[i - 1], arr[i]) > 0) {\n            return i - 1;\n          }\n          return i;\n        } else if (arr[i - 1] - target < target - arr[i]) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible in the given view, i.e. within its min/max resolution or zoom and\n   * extent, and `getVisible()` is `true`.\n   * @param {View|import(\"../View.js\").ViewStateAndExtent} view View or {@link import(\"../Map.js\").FrameState}.\n   * @return {boolean} The layer is visible in the current view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    const layerExtent = this.getExtent();\n    return (\n      this.getVisible() &&\n      inView(this.getLayerState(), frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateAndExtent} view View or  {@link import(\"../Map.js\").FrameState}.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateAndExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateAndExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.height_ = options.height;\n\n    /**\n     * Recalculate the scale if width or height were given.\n     */\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      const image = this.getImage(1);\n      const setScale = () => {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      };\n      if (image.width > 0) {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      } else {\n        image.addEventListener('load', setScale);\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale = this.getScale();\n    scale = Array.isArray(scale) ? scale.slice() : scale;\n    // if either width or height are defined, do not pass scale.\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      scale = undefined;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n      width: this.width_,\n      height: this.height_,\n    });\n  }\n\n  /**\n   * Set the scale of the Icon by calculating it from given width and height and the\n   * width and height of the image.\n   *\n   * @private\n   * @param {number} width The width.\n   * @param {number} height The height.\n   */\n  updateScaleFromWidthAndHeight(width, height) {\n    const image = this.getImage(1);\n    if (width !== undefined && height !== undefined) {\n      super.setScale([width / image.width, height / image.height]);\n    } else if (width !== undefined) {\n      super.setScale([width / image.width, width / image.width]);\n    } else if (height !== undefined) {\n      super.setScale([height / image.height, height / image.height]);\n    } else {\n      super.setScale([1, 1]);\n    }\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels).\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Get the height of the icon (in pixels).\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    return this.height_;\n  }\n\n  /**\n   * Set the width of the icon in pixels.\n   *\n   * @param {number} width The width to set.\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.updateScaleFromWidthAndHeight(width, this.height_);\n  }\n\n  /**\n   * Set the height of the icon in pixels.\n   *\n   * @param {number} height The height to set.\n   */\n  setHeight(height) {\n    this.height_ = height;\n    this.updateScaleFromWidthAndHeight(this.width_, height);\n  }\n\n  /**\n   * Set the scale and updates the width and height correspondingly.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @override\n   * @api\n   */\n  setScale(scale) {\n    super.setScale(scale);\n    const image = this.getImage(1);\n    if (image) {\n      const widthScale = Array.isArray(scale) ? scale[0] : scale;\n      if (widthScale !== undefined) {\n        this.width_ = widthScale * image.width;\n      }\n      const heightScale = Array.isArray(scale) ? scale[1] : scale;\n      if (heightScale !== undefined) {\n        this.height_ = heightScale * image.height;\n      }\n    }\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available\n * when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.3.0';\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","//      \n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n              \n              \n              \n              \n\n    constructor(r        , g        , b        , a         = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n                        \n                        \n                              \n                      \n                       \n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input                        )               {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString()         {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha()                                   {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","//      \n\nimport assert from 'assert';\n\n                                                                 \n                                                         \n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters     , propertySpec                            )                          {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec)               {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression     ).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s        )                                   {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","//      \n\nexport default function (output     , ...inputs            )      {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n","//      \n\nclass ParsingError extends Error {\n                \n                    \n    constructor(key        , message        ) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","//      \n\n                                                \n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n                   \n                                        \n    constructor(parent        , bindings                              = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings                             )        {\n        return new Scope(this, bindings);\n    }\n\n    get(name        )             {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name        )          {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","//      \n\n                                         \n                                             \n                                             \n                                               \n                                           \n                                             \n                                           \n                                           \n                                                 \n                                                   \n                                                           \n\n                                                                            \n\n                  \n               \n                 \n                 \n                  \n                \n                 \n                \n                                                           \n                \n                   \n                    \n                      \n\n                         \n                  \n                   \n              \n \n\n                                                                                      \n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType      , N         )            {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type      )         {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected      , t      )          {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided      , allowedTypes             )          {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided     , allowedTypes                   )          {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n","//      \n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\n                   \n                                  \n  \n\n                             \n                 \n                                    \n                                 \n                     \n\n            \n                                    \n                                 \n                     \n\n                                           \n\n                           \n \n\n                        \n                                          \n                              \n                                                         \n                                \n                      \n                                           \n \n\nexport default class Collator {\n                          \n                                                        \n                            \n\n    constructor(caseSensitive         , diacriticSensitive         , locale               ) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs        , rhs        )         {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale()         {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","//      \n                                             \n                                                            \n\nexport class FormattedSection {\n                 \n                                \n                         \n                             \n                            \n\n    constructor(text        , image                      , scale               , fontStack               , textColor              ) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n                                      \n\n    constructor(sections                         ) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted        )            {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty()          {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text                    )            {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString()         {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize()               {\n        const serialized               = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options                           = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]              ).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\n                                    \n                 \n                      \n  \n\nexport default class ResolvedImage {\n                 \n                       \n\n    constructor(options                      ) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString()         {\n        return this.name;\n    }\n\n    static fromString(name        )                       {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize()                {\n        return [\"image\", this.name];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\n                                     \n\nexport function validateRGBA(r       , g       , b       , a        )                {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\n                                                                                                                                                  \n\nexport function isValue(mixed       )          {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value       )       {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType                         ;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value       )         {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","//      \n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\n                                      \n                                         \n                                                                       \n                                                        \n\nclass Literal                       {\n               \n                 \n\n    constructor(type      , value       ) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args                       , context                )                 {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]     );\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate()        {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value     );\n        }\n    }\n}\n\nexport default Literal;\n","//      \n\nclass RuntimeError {\n                 \n                    \n\n    constructor(message        ) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON()         {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","//      \n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name         = (args[0]     );\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx                   )             {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","//      \n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                                   \n                                                            \n                                                        \n                        \n                             \n                            \n                                 \n \n\nexport default class FormatExpression                       {\n               \n                                                \n\n    constructor(sections                                   ) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections                                    = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]     );\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx                   )            {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn                         ) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined()          {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class ImageExpression                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx                   )                       {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize()                       {\n        return [\"image\", this.input.serialize()];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name         = (args[0]     );\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx                   )                                                                       {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]     ) / 255, (input[1]     ) / 255, (input[2]     ) / 255, (input[3]     ));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","//      \n\nimport {Color} from './values.js';\n\n                                                \n                                                           \n                                                                        \n                                                             \n                                                                    \n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n                              \n                      \n                                \n                                        \n                                    \n                                      \n                             \n                                              \n\n                                            \n\n    constructor() {\n        this.globals = (null     );\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id()                {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType()                {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry()                       {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID()                         {\n        return this.canonical;\n    }\n\n    properties()                  {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter()         {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input        )         {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","//      \n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\n                                                                    \n                                     \n                                       \n\n                                       \n                                       \n                                                                \n                                               \n                                                            \n\nclass CompoundExpression                       {\n                 \n               \n                        \n                            \n\n                                                   \n\n    constructor(name        , type      , evaluate          , args                   ) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx                   )        {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()               {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args                       , context                )              {\n        const op         = (args[0]     );\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext                 = (null     );\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs                    = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry                    ,\n        definitions                            \n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature           )         {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","//      \n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class CollatorExpression                       {\n               \n                              \n                                   \n                              \n\n    constructor(caseSensitive            , diacriticSensitive            , locale                   ) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx                   )           {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined()          {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","//      \n\nimport {isValue} from '../values.js';\n                                      \nimport {BooleanType} from '../types.js';\n                                                                       \n                                                        \n                                                              \n                                                                                        \n                                                                \n\n                                                             \n\n// minX, minY, maxX, maxY\n                                             \nconst EXTENT = 8192;\n\nfunction updateBBox(bbox      , coord                  ) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng        ) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat        ) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1      , bbox2      ) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical                 ) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox      , canonical                 ) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical                 ) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within                       {\n               \n                    \n                                \n\n    constructor(geojson         , geometries                 ) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]        );\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx                   )          {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","//      \n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\n                                                \n\nfunction isFeatureConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e            , properties               )          {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n","//      \n\n                                      \n                                                 \n                                                        \n                                                               \n\nclass Var                       {\n               \n                 \n                                \n\n    constructor(name        , boundExpression            ) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args                       , context                )             {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx                   )      {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","//      \n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\n                                                                    \n                                     \n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n                                 \n                        \n                \n                 \n                                \n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n                        \n\n    constructor(\n        registry                    ,\n        path                = [],\n        expectedType       ,\n        scope        = new Scope(),\n        errors                      = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr       ,\n        index         ,\n        expectedType        ,\n        bindings                              ,\n        options                                                  = {}\n    )              {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr       , options                                                 )              {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation                              ) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index        , expectedType        , bindings                              )                 {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error        , ...keys               ) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected      , t      )          {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression            ) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n","//      \n\nimport RuntimeError from './runtime_error.js';\n\n                                                \n\n                                                \n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops               , input        )         {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","//      \n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Step                       {\n               \n\n                      \n                          \n                               \n\n    constructor(type      , input            , stops       ) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx                   )      {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","//      \n\nimport Color from './color.js';\n\nexport function number(a        , b        , t        )         {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from       , to       , t        )        {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from               , to               , t        )                {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","//      \n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\n                 \n              \n              \n              \n                 \n  \n\n                 \n              \n              \n              \n                 \n  \n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t        ) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t        ) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x        ) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x        ) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor       )           {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor          )        {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from          , to          , t        )           {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor       )           {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor          )        {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a        , b        , t        ) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from          , to          , t        )           {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","//      \n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\n                               \n                        \n                                           \n                                                                              \n\nclass Interpolate                       {\n               \n\n                                                                    \n                                     \n                      \n                          \n                               \n\n    constructor(type      , operator                                                       , interpolation                   , input            , stops       ) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation                   , input        , lower        , upper        )         {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args                       , context                )               {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints     )\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator     ), interpolation, input, stops);\n    }\n\n    evaluate(ctx                   )        {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]     )(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","//      \n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Coalesce                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )            {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType       = (null     );\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType     ), parsedArgs);\n    }\n\n    evaluate(ctx                   )             {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","//      \n\n                                      \n                                                                       \n                                                        \n                                                               \n\nclass Let                       {\n               \n                                          \n                       \n\n    constructor(bindings                             , result            ) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx                   )      {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args                       , context                )       {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings                              = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined()          {\n        return this.result.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","//      \n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                                 \n                                        \n\nclass At                       {\n               \n                      \n                      \n\n    constructor(type      , index            , input            ) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t            = (input.type     );\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx                   )        {\n        const index = ((this.index.evaluate(ctx)     )        );\n        const array = ((this.input.evaluate(ctx)     )              );\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn                         ) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass In                       {\n               \n                       \n                         \n\n    constructor(needle            , haystack            ) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx                   )          {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass IndexOf                       {\n               \n                       \n                         \n                           \n\n    constructor(needle            , haystack            , fromIndex             ) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args                       , context                )           {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx)        );\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","//      \n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType,          } from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n\n// Map input label values to output expression index\n                                         \n\nclass Match                       {\n               \n                    \n\n                      \n                 \n                               \n                          \n\n    constructor(inputType      , outputType      , input            , cases       , outputs                   , otherwise            ) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType     ), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType     ), (outputType     ), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput                                          = [];\n        const outputLookup                            = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\n                                                \n\nclass Case                       {\n               \n\n                       \n                          \n\n    constructor(type      , branches          , otherwise            ) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType       ;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType     ), branches, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","//      \n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Slice                       {\n               \n                      \n                           \n                          \n\n    constructor(type      , input            , beginIndex            , endIndex             ) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const beginIndex = (this.beginIndex.evaluate(ctx)        );\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx)        );\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","//      \n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                                               \n                                                              \n                                                        \n                                      \n\n                                                                 \n\nfunction isComparableType(op                    , type      ) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx                   , a     , b     )          { return a === b; }\nfunction neq(ctx                   , a     , b     )          { return a !== b; }\nfunction lt(ctx                   , a     , b     )          { return a < b; }\nfunction gt(ctx                   , a     , b     )          { return a > b; }\nfunction lteq(ctx                   , a     , b     )          { return a <= b; }\nfunction gteq(ctx                   , a     , b     )          { return a >= b; }\n\nfunction eqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx                   , a     , b     , c     )          { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op                    , compareBasic                                          , compareWithCollator                                               )                         {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison                       {\n                   \n                        \n                        \n                              \n                                    \n\n        constructor(lhs            , rhs            , collator             ) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args                       , context                )              {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op                     = (args[0]     );\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx                   )          {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn                         ) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined()          {\n            return true;\n        }\n\n        serialize()                       {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals                                                                  = makeComparison('==', eq, eqCollate);\nexport const NotEquals                                                                    = makeComparison('!=', neq, neqCollate);\nexport const LessThan                                                                 = makeComparison('<', lt, ltCollate);\nexport const GreaterThan                                                                 = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual                                                                      = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual                                                                      = makeComparison('>=', gteq, gteqCollate);\n","//      \n\nimport {StringType, NumberType} from '../types.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                   \n                                          \n  \n\n                                 \n                 \n                                    \n                                     \n                         \n\n            \n                                    \n                                     \n                         \n\n                              \n\n                           \n \n\n                            \n                                                        \n                             \n                         \n                                          \n                                          \n  \n\nexport default class NumberFormat                       {\n               \n                       \n                                 // BCP 47 language tag\n                                 // ISO 4217 currency code, required if style=currency\n                                 // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n                                          // Default 0\n                                          // Default 3\n\n    constructor(number            ,\n                locale                   ,\n                currency                   ,\n                unit                   ,\n                minFractionDigits                   ,\n                maxFractionDigits                   ) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx                   )         {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn                         ) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","//      \n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Length                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx                   )               {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","//      \n\nimport {\n              \n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\n                                                       \n                                                         \n\nconst expressions                     = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type      )          {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k     ).value] === (v     ).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v     ).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v     ).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k     ).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v     ).value.indexOf(ctx.properties()[(k     ).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k     ).value], (v     ).value, 0, (v     ).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","//      \n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\n                          \n                                       \n                                      \n\nexport function success      (value   )               {\n    return {result: 'success', value};\n}\n\nexport function error      (value   )               {\n    return {result: 'error', value};\n}\n","//      \n\n                                                                 \n\nexport function supportsPropertyExpression(spec                            )          {\n    return spec['property-type'] === 'data-driven';\n}\n\nexport function supportsZoomExpression(spec                            )          {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec                            )          {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","//      \n\nexport default function getType(val       )         {\n    if (val instanceof Number) {\n        return 'number';\n    } else if (val instanceof String) {\n        return 'string';\n    } else if (val instanceof Boolean) {\n        return 'boolean';\n    } else if (Array.isArray(val)) {\n        return 'array';\n    } else if (val === null) {\n        return 'null';\n    } else {\n        return typeof val;\n    }\n}\n","\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\n                                                     \n                                       \n                                                \n                                                                 \n                                              \n                                                                    \n                                                            \n                                                           \n                                                \n                                                             \n                                                                    \n\n                       \n                                                                      \n                        \n                                    \n                                      \n                                   \n  \n\n                                              \n\n                                          \n                 \n                   \n                            \n                          \n                               \n                                               \n                       \n   \n\nexport class StyleExpression {\n                           \n\n                                  \n                         \n                                              \n                                     \n\n    constructor(expression            , propertySpec                             ) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression       )          {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression       , propertySpec                             )                                               {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression                       {\n               \n                              \n                                      \n\n    constructor(kind      , expression                 ) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant'                ) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression                       {\n               \n                             \n                              \n\n                                      \n                                          \n\n    constructor(kind      , expression                 , zoomStops               , interpolationType                    ) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera'                ) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input        , lower        , upper        )         {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\n                                  \n                     \n                                                                                                                                                                \n \n\n                                \n                   \n                              \n                                                                                                                                                                                                     \n  \n\n                                \n                   \n                                                                                                                                                                \n                                                                                  \n                             \n                                         \n  \n\n                                   \n                      \n                              \n                                                                                                                                                                                                     \n                                                                                  \n                             \n                                         \n  \n\n                                     \n                        \n                      \n                      \n                          \n\nexport function createPropertyExpression(expression       , propertySpec                            )                                                       {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value)                    ) :\n            (new ZoomConstantExpression('source', expression.value)                  ));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType)                  ) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType)                     ));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction    {\n                                               \n                                               \n\n                         \n                                                                    \n                                                                                  \n                              \n\n    constructor(parameters                               , specification                            ) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized                                                                                          )                           {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input                          )                                                                                           {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression   (value                               , specification                            )                          {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification)     );\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant      = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression            )                                           {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec                            )       {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec                            )        {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","//      \n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value       )        {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value       )        {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue                           = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","//      \n\nimport spec from './v8.json';\n\n                                         \n\nexport default spec;\n","//      \n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\n                                                                      \n                                                             \n                                                \n\n                                                                                                       \n                                                                                                                                                                                                   \n                                                                                                                                      \n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter     )          {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter     , layerType          = 'fill')                {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter     )                             );\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties                  , feature         , canonical                  ) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties                  , feature         , canonical                  , featureTileCoord        , featureDistanceData                      ) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc     )                  );\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter     )      {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression     )      {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter     ) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter     )          {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression        )          {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression     )      {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter             )        {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property        , value     , op        ) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters                   ) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property        , values            ) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property        ) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter       ) {\n    return ['!', filter];\n}\n","//      \nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","//      \n\nimport refProperties from './util/ref_properties.js';\n\n                                                   \n\nfunction deref(layer                    , parent                    )                     {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent     )[k];\n        }\n    });\n\n    return ((result     )                    );\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers                           )                            {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]     ).ref]);\n        }\n    }\n\n    return layers;\n}\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return this.image_ ? this.image_.getImage() : null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = this.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {getCenter, getHeight, getIntersection, getWidth} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(\n      sourceExtent,\n      sourceResolution,\n      pixelRatio\n    );\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.changed.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return decodeURI(urlObject.href);\n    }\n    urlObject.searchParams.set(tokenParam, token);\n    return decodeURI(urlObject.href);\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`;\n  }\n  return `https://{a-d}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`;\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport {\n  METERS_PER_UNIT,\n  equivalent,\n  fromLonLat,\n  get as getProjection,\n  getUserProjection,\n} from 'ol/proj.js';\nimport {\n  _colorWithOpacity,\n  stylefunction as applyStyleFunction,\n  getValue,\n} from './stylefunction.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getFunctionCache,\n  getGlStyle,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\nimport {getFonts} from './text.js';\nimport {getTopLeft} from 'ol/extent.js';\nimport {hillshade} from './shaders.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, ResourceType): (Request|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` object. Without a return value,\n * the original request will not be modified. For `Tiles` and `GeoJSON` resources, only the `url` of\n * the returned request will be respected.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url`,\n * `tileUrlFunction` and `tileGrid` (exception: when the source projection is not `EPSG:3857`).\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer')\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction()\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection()\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom())\n              ) {\n                const tileGrid = layer.getSource().getTileGrid();\n                layer.setMaxResolution(\n                  tileGrid.getResolution(tileGrid.getMinZoom())\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units]\n                );\n              }\n            }\n            style = applyStyleFunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              getFonts,\n              options.getImage\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href\n            )\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed = options.transformRequest(\n                  spriteImageUrl,\n                  'SpriteImage'\n                );\n                if (transformed instanceof Request) {\n                  spriteImageUrl = encodeURI(transformed.url);\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`\n                )\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer.getLayers().push(setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or VectorTile layer.\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|VectorTileLayer} mapOrLayer OpenLayers Map or VectorTile layer.\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions\n  );\n  let bg, opacity;\n  if (paint['background-color'] !== undefined) {\n    bg = getValue(\n      background,\n      'paint',\n      'background-color',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function (tileJSON) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJSON,\n          options\n        );\n        sourceOptions.format = new MVT();\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  getTileJson(glSource, styleUrl, options)\n    .then(function (tileJson) {\n      const source = new TileJSON({\n        interpolate:\n          options.interpolate === undefined ? true : options.interpolate,\n        transition: 0,\n        crossOrigin: 'anonymous',\n        tileJSON: tileJson,\n      });\n      source.tileGrid = sourceOptionsFromTileJSON(\n        glSource,\n        tileJson,\n        options\n      ).tileGrid;\n      if (options.projection) {\n        //@ts-ignore\n        source.projection = getProjection(options.projection);\n      }\n      const getTileUrl = source.getTileUrlFunction();\n      source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n        const bboxTemplate = getBboxTemplate(projection);\n        let src = getTileUrl(tileCoord, pixelRatio, projection);\n        if (src.indexOf(bboxTemplate) != -1) {\n          const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n          src = src.replace(bboxTemplate, bbox.toString());\n        }\n        return src;\n      });\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    let geoJsonUrl = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href\n    );\n    if (options.transformRequest) {\n      const transformed = options.transformRequest(geoJsonUrl, 'GeoJSON');\n      if (transformed instanceof Request) {\n        geoJsonUrl = decodeURI(transformed.url);\n      }\n    }\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        url: extentUrl,\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    return new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n    });\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions\n    )\n  );\n  source.set('mapbox-source', glSource);\n  return source;\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = event.resolution;\n      const zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions\n      );\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          zoom,\n          emptyObj,\n          functionCache\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        })\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom)\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      throw new Error(`${type} layers are not supported`);\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options\n            )\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options)\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {}\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source')\n          )\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                defaultResolutions[minZoom],\n                tileGrid.getResolution(sourceMinZoom)\n              ) + 1e-9\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(defaultResolutions[maxZoom] + 1e-9);\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(defaultResolutions[minZoom] + 1e-9);\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options)\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n","import {\n  stylefunction as applyStylefunction,\n  styleFunctionArgs,\n} from './stylefunction.js';\nimport {expandUrl} from 'ol/tileurlfunction.js';\nimport {finalizeLayer, setupLayer} from './apply.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const request = options.transformRequest\n    ? options.transformRequest(url, resourceType) || new Request(url)\n    : new Request(url);\n  if (!request.headers.get('Accept')) {\n    request.headers.set('Accept', 'application/json');\n  }\n  if (metadata) {\n    metadata.request = request;\n  }\n  const pendingRequest = fetch(request)\n    .then(function (response) {\n      delete pendingRequests[url];\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Error fetching source ' + url));\n    })\n    .catch(function (error) {\n      delete pendingRequests[url];\n      return Promise.reject(new Error('Error fetching source ' + url));\n    });\n  pendingRequests[url] = [request, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nfunction getTransformedTilesUrl(tilesUrl, options) {\n  if (options.transformRequest) {\n    const transformedRequest = options.transformRequest(tilesUrl, 'Tiles');\n    if (transformedRequest instanceof Request) {\n      return decodeURI(transformedRequest.url);\n    }\n  }\n  return tilesUrl;\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Object} TileJson\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve(\n          Object.assign({}, glSource, {\n            url: undefined,\n            tiles: expandUrl(normalizedSourceUrl),\n          })\n        );\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl,\n          options,\n          metadata\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return getTransformedTilesUrl(\n              normalizeSourceUrl(\n                tileUrl,\n                options.accessToken,\n                options.accessTokenParam || 'access_token',\n                metadata.request.url\n              ),\n              options\n            );\n          });\n          return Promise.resolve(tileJson);\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return getTransformedTilesUrl(\n            normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              styleUrl || location.href\n            ),\n            options\n          );\n        }),\n      });\n      promise = Promise.resolve(Object.assign({}, glSource));\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor\n) {\n  const imageCanvas = document.createElement('canvas');\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  imageCanvas.width = imgSize[0];\n  imageCanvas.height = imgSize[1];\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId)\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.'\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  applyStylefunction.apply(\n    undefined,\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id)\n      )\n    ]\n  );\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.'\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const layers = mapOrGroup.get('mapbox-style').layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1\n  );\n  applyStylefunction.apply(\n    undefined,\n    styleFunctionArgs[\n      getStyleFunctionKey(mapOrGroup.get('mapbox-style'), layer)\n    ]\n  );\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @typedef {import('./apply.js').ResourceType} ResourceType\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1)\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css'\n) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`\n        ) !== 100\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', fontDescription[1])\n          .replace(\n            '{-fontstyle}',\n            fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')\n          )\n          .replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\n\nimport Color from '@mapbox/mapbox-gl-style-spec/util/color.js';\nimport convertFunction from '@mapbox/mapbox-gl-style-spec/function/convert.js';\nimport createFilter from '@mapbox/mapbox-gl-style-spec/feature_filter/index.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport mb2css from 'mapbox-to-css-font';\nimport spec from '@mapbox/mapbox-gl-style-spec/reference/v8.json';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  createPropertyExpression,\n  isExpression,\n} from '@mapbox/mapbox-gl-style-spec/expression/index.js';\nimport {isFunction} from '@mapbox/mapbox-gl-style-spec/function/index.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', ')\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getIconDeclutterMode(layer, zoom, feature, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    'icon-allow-overlap',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    'icon-ignore-placement',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  let spriteImage, spriteImageSize;\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n      img.src = spriteImageUrl;\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      sourceOrLayers.indexOf(layerId) !== -1\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                ),\n                opacity\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          color =\n            !('line-pattern' in paint) && 'line-color' in paint\n              ? colorWithOpacity(\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ),\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-opacity',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  )\n                )\n              : undefined;\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2)\n                    )\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        {},\n                        null\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const minY = Math.min(y1, y2);\n                        const maxX = Math.max(x1, x2);\n                        const maxY = Math.max(y1, y2);\n                        if (\n                          midpoint[0] >= minX &&\n                          midpoint[0] <= maxX &&\n                          midpoint[1] >= minY &&\n                          midpoint[1] <= maxY\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getIconDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      functionCache\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      ).slice(0);\n                      displacement[1] *= -1;\n                    }\n                    const color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, imgSize, size, offset;\n                      if (haloWidth) {\n                        img = drawIconHalo(\n                          spriteImage,\n                          spriteImageData,\n                          haloWidth,\n                          haloColor\n                        );\n                        imgSize = [img.width, img.height];\n                      } else {\n                        img = spriteImage;\n                        imgSize = spriteImageSize;\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        imgSize: imgSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState\n                        )\n                      )\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    )\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    ]\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth;\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined\n                )\n              : fontArray,\n            textSize,\n            textLineHeight\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          if (!style.getText()) {\n            style.setText(\n              text ||\n                new Text({\n                  padding: [2, 2, 2, 2],\n                })\n            );\n          }\n          text = style.getText();\n          const textTransform = layout['text-transform'];\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n            ? applyLetterSpacing(label, letterSpacing)\n            : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            )\n          );\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              ) *\n                label.length) /\n                wrappedLabel.length\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0]\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1]\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            )\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            opacity\n          );\n          if (haloColor) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t592: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkol_mapbox_style\"] = self[\"webpackChunkol_mapbox_style\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));"],"names":["deferred","UnitBezier","p1x","p1y","p2x","p2y","this","cx","bx","ax","cy","by","ay","module","exports","prototype","sampleCurveX","t","sampleCurveY","sampleCurveDerivativeX","solveCurveX","x","epsilon","t0","t1","t2","x2","i","Math","abs","d2","solve","kCSSColorTable","clamp_css_byte","round","clamp_css_float","f","parse_css_int","str","length","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","css_str","iv","replace","toLowerCase","slice","substr","op","indexOf","ep","fname","params","split","alpha","pop","s","l","e","read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","write","value","c","rt","isNaN","floor","log","LN2","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","black","fat","poster","sp","italicRE","fontCache","fonts","size","lineHeight","cssData","Array","isArray","weight","style","fontFamilies","ii","parts","maybeWeight","w","test","previousPart","startsWith","fontFamily","join","push","assert","err","AssertionError","Error","captureStackTrace","name","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","p","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","r","a","n","o","exp","u","sqrt","max","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","const","messages","code","message","super","Property","CollectionEvent","element","index","array","options","on","once","un","unique_","unique","array_","let","assertUnique_","updateLength_","getLength","extend","forEach","getArray","item","get","insertAt","elem","dispatchEvent","removeAt","prev","setAt","except","ADD","REMOVE","Disposable","disposed","dispose","disposeInternal","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","then","catch","error","IDLE","LOADING","LOADED","ERROR","EMPTY","tileCoord","state","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","image_","Image","unlisten_","tileLoadFunction_","getImage","setImage","unlistenImage_","changed","handleImageError_","ctx","fillStyle","fillRect","canvas","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","map","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","resolution","rotation","center","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","managed","feature","layer","geometry","call","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","getExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","some","hasFeatureAtCoordinate","undefined","getMap","renderFrame","scheduleExpireIconCache","postRenderFunctions","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","ObjectEventType","redrawText","element_","document","createElement","position","width","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","hasListener","event","parentNode","removeChild","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","renderDeclutter","display","Map","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","addEventListener","passive","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","id","pointerId","target","Object","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","removeEventListener","Target","pointerEvents","target_","setTarget","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","PI","animate","easing","setRotation","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","zoomByDelta","anchor","newResolution","getResolutionForZoom","handleEvent","setActive","getActive","mapBrowserEvent","active","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroid","update","getResolution","adjustCenterInternal","begin","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","Pointer","DragRotate","lastAngle_","getConstraints","getSize","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","getGeometry","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","clone","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","deltaX","deltaY","currentCenter","pan","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","Date","now","lastIndex","firstIndex","dx","dy","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","getLayers","setLayerMapProperty","layers","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","MapProperty","View","Collection","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attribution","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","addChangeListener","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","viewOptions","setView","CollectionEventType","addOverlayInternal_","getId","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","getLayerStatesArray","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","isEmpty","maxTotalLoading","maxNewLoads","hints","viewHints","ViewHint","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","resolveConstraints","unobserve","ShadowRoot","host","Composite","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","Group","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","getState","declutterTree","extent","usedTiles","wantedTiles","mapId","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","getCount","setLayerGroup","oldLayerGroup","setSize","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","setViewportSize","ObjectEvent","oldValue","values_","hasOwnProperty","getKeys","keys","getProperties","assign","hasProperties","notify","listener","removeChangeListener","silent","applyProperties","unset","PROPERTYCHANGE","Observable","revision_","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","inTransition","endTransition","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","EventType","TileState","tileKey","newLoads","TileRange","createOrUpdate","tileRange","containsXY","containsTileRange","equals","getHeight","getWidth","intersects","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","cosAngle","sinAngle","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","createSnapToResolutions","defaultMaxResolution","getMetersPerUnit","defaultMinResolution","defaultMaxZoom","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","series","complete","setHint","updateAnimations_","getInteracting","jj","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","currentResolution","getCenter","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","getType","userProjection","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","ANIMATING","INTERACTING","binarySearch","haystack","needle","comparator","mid","cmp","ascending","found","linearFindNearest","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorCode","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","cache","cacheSize","fromString","g","exec","el","body","rgb","fromNamed","hasAlpha","normalize","Number","fromStringInternal_","asArray","asColorLike","levels","info","warn","level","console","coordinate1","coordinate2","wrapX","worldsAway","sourceExtentWidth","getWorldsAway","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","variant","families","family","createCanvasContext2D","canvasPool","settings","shift","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","easeIn","easeOut","inAndOut","linear","listen","originalListener","eventsKey","listenOnce","unlistenByKey","BaseEvent","CHANGE","BLUR","CLEAR","CONTEXTMENU","DRAGENTER","DRAGOVER","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","propagate","dispatching","pendingRemovals","pr","getListeners","boundingExtent","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","getRotatedViewport","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","FeatureFormat","defaultFeatureProjection","supportedMediaTypes","getReadOptions","getUnits","setWorldExtent","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","decimals","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","GeometryCollection","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","closestPointXY","closestPoint","minSquaredDistance","computeExtent","getGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","intersectsExtent","sx","sy","translate","Geometry","clonedGeometries","getObject","JSON","parse","readFeatureFromObject","readFeaturesFromObject","object","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","Point","readPointGeometry","LineString","readLineStringGeometry","readPolygonGeometry","MultiPoint","readMultiPointGeometry","MultiLineString","readMultiLineStringGeometry","MultiPolygon","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","getCoordinates","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","tmpTransform","extent_","extentRevision_","simplifyTransformedInternal","revision","simplifyTransformed","coord","getClosestPoint","point","intersectsCoordinate","simplify","tolerance","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","layout","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","extrapolate","getCoordinateAt","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","ends","ends_","getLayout","lineStrings","appendLineString","multiLineString","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","appendPoint","multiPoint","squaredDistance","getPoint","getPoints","points","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","thisLayout","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","getOrientedFlatCoordinates","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","LinearRing","inflate","deflate","SimpleGeometry","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","orient","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","getStrideForLayout","transformGeom2D","simpleGeometry","getFirstCoordinate","getLastCoordinate","nesting","getLayoutForStride","twiceArea","linearRingss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","lo","hi","m0","lineStringsCoordinateAtM","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","prevEndIndex","ret","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","quantizeMultiArray","transform2D","anchorX","anchorY","k","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","background_","background","opacity","className_","state_","getBackground","getClassName","getLayerState","getZIndex","getOpacity","getVisible","getLayersArray","states","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","toStyle","flatStyle","Style","fill","getFill","stroke","getStroke","text","getText","prefix","Fill","Stroke","lineCap","lineJoin","lineDash","lineDashOffset","miterLimit","Text","font","maxAngle","placement","repeat","rotateWithView","textAlign","justify","textBaseline","backgroundFill","backgroundStroke","iconSrc","iconImg","Icon","imgSize","anchorOrigin","anchorXUnits","anchorYUnits","displacement","declutterMode","shapePoints","RegularShape","radius","radius1","radius2","circleRadius","Circle","BaseVectorLayer","baseOptions","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleLike","GroupEvent","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","LayerGroup","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","ownLayerState","defaultZIndex","inView","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","Promise","resolve","getData","isVisible","layerExtent","prepareFrame","getMapInternal","arrayLayerState","createRenderer","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","PRELOAD","USE_INTERIM_TILES_ON_ERROR","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","opacity_","renderWorlds","executorGroup","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","setupCompositionContext_","compositionContext","releaseCompositionContext_","globalAlpha","drawImage","pixelTransform","inversePixelTransform","canvasTransform","useContainer","replayGroup","containerReused","preRender","clipped","clipUnrotated","restore","postRender","transforms","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","declutterBuilderGroup","userTransform","userExtent","loadFeatures","styleFunction","dirty","renderFeature","getFeaturesInExtent","replayGroupInstructions","ExecutorGroup","getOverlaps","builderGroup","BaseVector","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","renderedPixelToCoordinateTransform_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","getTile","hifi","wantedResolution","getRenderMode","renderTileImage_","isDrawableTile","hasContext","getTileImage","layerRevision","renderedTiles","builderState","getReplayState","renderedResolution","renderedRevision","renderedRenderOrder","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","tmpExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","tt","tileGrid","hitExtent","declutteredFeatures","reject","renderedProjection","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","reduce","accumulator","tileSize","getTileSize","getZForResolution","zDirection","getTileCoordCenter","tiles","getTileRenderTransform","worldOffset","renderMode","replayTypes","tileSource","clips","clipZs","hasExecutors","currentZ","contextSaved","currentClip","getClipCoords","clip","save","beginPath","moveTo","lineTo","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","getTilePixelSize","renderScale","setTransform","pixelScale","preload","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","bbox","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","modulo","lerp","toFixed","property","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","global","worldExtent","getPointResolution","cosh","Projection","PROJECTIONS","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","input","output","identityTransform","addProjection","projectionLike","pointResolution","getter","getPointResolutionFunc","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","projections2","forwardTransform","inverseTransform","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","atan","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","METERS_PER_UNIT","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","measureFont","measureElement","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","textHeights","registerFont","interval","referenceWidth","referenceFonts","isAvailable","fontStyle","fontWeight","available","referenceFont","measureTextWidth","check","done","clearInterval","setInterval","measureTextHeight","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","contextInstructions","executeLabelInstructions","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","sharedData","getAnchor","origin","getOrigin","getPixelRatio","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","textIsArray","strokeWidth","renderWidth","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","setLineDash","drawLabelWithPointPlacement_","baseline","execute_","pixelCoordinates","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","arc","closePath","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","drawChars","cc","part","executeHitDetection","ORDER","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","executors","instructionByZindex","candidates","contextSize","newContext","willReadFrequently","indexes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","getImageData","idx","executor","zs","builderTypes","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","beginPathInstruction","closePathInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","acos","TEXT_ALIGN","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","geometryType","beg","keep","saveTextStates_","p0","flatOffset","oo","chunk","chunkBegin","range","drawChars_","textFillStyle","textStrokeStyle","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","CanvasImmediateRenderer","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","setColor","setText","getImageSize","imgContext","getScale","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","createLoadedTileFinder","forEachLoadedTile","ImageState","loadImage","imageState","pixelContext","CanvasLayerRenderer","tempTransform","pixelContext_","col","row","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","tileLayer","extentChanged","renderedPixelRatio","newTiles_","tmpTileRange_","tileState","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getGutterForProjection","viewResolution","viewCenter","sourceRevision","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","getOpaque","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","alphaChanged","canExpireCache","postRenderFunction","expireCache","tileCallback","tileCount","useTile","updateCacheSize","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","getImageState","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","ud","vd","step","steps","targetTileGrid","getTileFunction","errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","reproject_","leftToLoad","sourceListenKey","unlistenSources_","Triangulation","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","createSnapToN","createSnapToZero","hasArea","toSize","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","RBush","maxEntries","rbush_","items_","extents","items","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorSourceEvent","Event","VectorSource","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","Source","CircleStyle","getRadius","getDisplacement","setRadius","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","imgSize_","iconImage_","iconImage","offset_","offsetOrigin_","offsetOrigin","origin_","updateScaleFromWidthAndHeight","setScale","setAnchor","iconImageSize","setWidth","setHeight","widthScale","heightScale","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","maxCacheSize","shared","ImageStyle","scaleArray_","displacement_","setDisplacement","setRotateWithView","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","toFunction","setRenderer","setHitDetectionRenderer","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","transformStringDiv","tmp_","create","reset","multiply","transform1","transform2","a1","d1","e1","f1","a2","e2","f2","setFromArray","makeScale","compose","makeInverse","det","transformString","abstract","uidCounter_","getUid","ol_uid","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","rgba","toArray","toArray01","toArray01PremultipliedAlpha","white","transparent","red","blue","convertLiteral","getInterpolateOperator","parameters","colorSpace","getFallback","propertySpec","defaultValue","default","convertPropertyFunction","getFunctionType","expression","stop","appendStopPair","fixupDegenerateStepCurve","base","curve","isStep","interpolated","convertTokenString","re","literal","inputs","Scope","bindings","has","NullType","kind","NumberType","StringType","BooleanType","ColorType","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","itemType","N","valueMemberTypes","checkSubtype","expected","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","Formatted","sections","unformatted","section","factory","serialize","serialized","ResolvedImage","validateRGBA","isValue","mixed","typeOf","Literal","expectedType","evaluate","eachChild","outputDefined","RuntimeError","types","string","number","boolean","Assertion","parsed","arg","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","Coercion","parseColor","child","geometryTypes","EvaluationContext","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","registry","path","scope","parsedArgs","argParseFailed","errors","signatures","actualTypes","register","CollatorExpression","updateBBox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","rayIntersect","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectPolygon","vectorP","vectorQ","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","isStateConstant","isGlobalPropertyConstant","Var","boundExpression","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","to","Xn","Zn","t3","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","Interpolate","operator","interpolation","exponentialInterpolation","lowerValue","upperValue","difference","interpolationFactor","lower","upper","controlPoints","rest","outputLower","outputUpper","Coalesce","needsAnnotation","firstImage","argCount","Let","At","In","IndexOf","fromIndex","Match","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","groupedByOutput","outputLookup","outputIndex","coerceLabel","Case","branches","Slice","beginIndex","endIndex","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","hasUntypedArgument","Comparison","lt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","E","LN10","asin","isSupportedScript","toUpperCase","supportsInterpolation","spec","identityFunction","createFunction","innerFun","hashedStops","categoricalKeyType","isColor","zoomAndFeatureDependent","featureDependent","zoomDependent","evaluateExponentialFunction","evaluateIntervalFunction","evaluateCategoricalFunction","evaluateIdentityFunction","featureFunctions","zoomStops","featureFunctionStops","interpolationType","_","keyType","interp","colorspace","evaluatedLower","evaluatedUpper","StyleExpression","_warningHistory","_evaluator","_defaultValue","_enumValues","createExpression","parser","enum","formatted","resolvedImage","getExpectedType","evaluateWithoutErrorHandling","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","createPropertyExpression","isFeatureConstant","isZoomConstant","zoomCurve","findZoomCurve","StylePropertyFunction","specification","_parameters","_specification","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","deserialize","layerType","needGeometry","needFeature","isExpressionFilter","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterFunc","filterSpec","latest","compiledStaticFilter","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","filters","convertComparisonOp","convertNegation","convertInOp","convertHasOp","deref","derefLayers","ref","getKeyZXY","fromKey","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","urls","charCode","startCharCode","stopCharCode","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","imageExtent","imageMapWidth","imageMapHeight","imageResolution","dw","dh","previousAlpha","ImageLayer","BaseImage","layersPBFReader","layerPBFReader","version","featurePBFReader","readRawFeature","featureClass_","featureClass","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","geom","ctor","pbfLayers","pbfLayer","ImageCanvas","error_","getError","handleLoad_","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","setResolutions","findNearestResolution","getImageInternal","handleImageChange","BaseTileLayer","TileLayer","BaseTile","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","TileCache","pruneExceptNewestZ","tmpTileCoord","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","hasImageData","ImageData","createMinion","operation","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Uint8ClampedArray","arrays","pixels","createWorker","config","onMessage","lines","lib","worker","Worker","Blob","Buffer","URL","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","postMessage","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","_enqueue","_dispatch","job","slices","_resolveJob","createImageData","newImageData","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layerOrSource","Tile","createLayers","useResolutions_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","processSources_","imageDatas","onWorkerComplete_","putImageData","sharedContext","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","TileJSON","tileJSON_","jsonp","errback","callbackParam","script","cleanup","async","timer","head","handleTileJSONResponse","handleTileJSONError","client","onXHRLoad_","onXHRError_","tileJSON","response","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","features_","onLoad","setFeatures","onError","VectorRenderTile","replayState_","errorTileKeys","renderedTileZ","defaultLoadFunction","sourceTileCache","tileGrids_","tileFeatures","candidate","usedSourceTiles","cacheKey","sourceZ","sourceTileState","listenChange","sourceTileKey","coordKey","empty","hillshade","pixelX","pixelY","z0","dzdx","dzdy","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","elevationImage","elevationData","shadeData","dp","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","shadowColor","accentColor","encoding","calculateElevation","vert","mapboxBaseUrl","getMapboxPath","normalizeStyleUrl","token","mapboxPath","decodeURI","location","href","normalizeSourceUrl","tokenParam","styleUrl","urlObject","searchParams","getTileResolutions","defaultResolutions","completeOptions","accessToken","accessTokenParam","applyStyle","glStyle","sourceOrLayersOrOptions","optionsOrPath","sourceId","sourceOrLayers","updateSource","trim","getGlStyle","Vector","VectorTile","spriteData","spriteImageUrl","find","assignSource","setupVectorSource","targetSource","glSource","setupGeoJSONSource","onChange","sprite","getFonts","normalizeSpriteUrl","sizeFactor","spriteUrl","pathname","fetchResource","spritesJson","transformRequest","Request","encodeURI","emptyObj","applyBackground","mapOrLayer","getBackgroundColor","setupBackgroundLayer","setFirstBackground","getSourceIdByRef","sourceOptionsFromTileJSON","tileJSONSource","tileJSONDoc","bounds","ll","tr","extentFromTileJSON","minzoom","maxzoom","sourceOptions","glLayer","functionCache","paint","bg","getValue","visibility","div","getTileJson","getBboxTemplate","setupRasterLayer","tileJson","getTileUrl","bboxTemplate","geoJsonFormat","GeoJSON","geoJsonUrl","getFunctionCache","glLayers","setupVectorLayer","updateRasterLayerProperties","prerenderRasterLayer","setupGeoJSONLayer","hillshadeLayer","Raster","setupHillshadeLayer","glSourceId","processStyle","mapOrGroup","promises","layerIds","mapOrGroupOrElement","promise","HTMLElement","sourceMinZoom","mapboxLayers","layerMapboxLayerids","mapboxLayer","manageVisibility","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","degrees","createCanvas","pendingRequests","resourceType","metadata","request","headers","pendingRequest","fetch","ok","json","glStyleOrUrl","getTransformedTilesUrl","tilesUrl","transformedRequest","tilejsonCache","normalizedSourceUrl","scheme","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","setFeatureState","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","joinSpaceString","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","loadedFontFamilies","fontFamilyRegEx","stripQuotesRegEx","hasFontFamily","styleSheets","styleSheet","cssRules","rules","cssRule","cssText","processedFontFamilies","templateUrl","fontsKey","fontDescriptions","cssFont","fontDescription","fontUrl","querySelector","markup","rel","renderFeatureCoordinates","expressionData","rawExpression","compiledExpression","zoomObj","layoutOrPaint","layerId","functions","isExpr","convertIdentityFunction","tokens","featureFunctionParameters","convertZoomAndPropertyFunction","convertZoomFunction","convertFunction","getIconDeclutterMode","evaluateFilter","filterCache","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","stylefunction","olLayer","spriteImageSize","getStyleFunctionKey","action","mapboxSource","allLayers","layersBySourceLayer","iconImageCache","patternCache","getFilterCache","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","strokeColor","fillIcon","icon","icon_cache_key","pattern","createPattern","hasImage","placementAngle","skipLabel","styleGeom","imageElement","iconRotationAlignment","iconSize","iconColor","iconCacheKey","iconOptions","circleStrokeColor","circleColor","circleStrokeWidth","cache_key","textLineHeight","textSize","maxTextWidth","fontArray","textField","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","fulfilled","enumerable","prop","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}